// ----------------------------------------------------------------------------
// ----------THESE PARAMS CONTROL CLUSTER CONFIGURATION------------------------
// ----------------------------------------------------------------------------

Steve.Watanabe=SanJoseSharks
AzBlob.swatanabe.sasToken=asdfasdf

// FuncTests.LibNsFuncTestNumberOfCores=0
// FuncTests.LibNsFuncTestNumThreadPerCore=1
FuncTests.LibNsFuncTestNumThreadPerCore=2

// FuncTests.LibNsFuncTestEnableMultiOpTest=true
// FuncTests.LibNsFuncTestDeletionFreq=4
// FuncTests.LibNsFuncTestNumObjPerThread=256
// FuncTests.LibNsFuncTestNumLoop=2

// FuncTests.LibNsFuncTestEnableCreateObjTest=true
// FuncTests.LibNsFuncTestNumObjCreationTest=1024

// FuncTests.LibNsFuncTestEnablePathInfoTest=true
// FuncTests.LibNsFuncTestNumObjPathInfoTest=256
FuncTests.LibNsFuncTestNumObjPathInfoTest=4096
// FuncTests.LibNsFuncTestNumPathInfoCalls=32

// FuncTests.LibNsFuncTestEnableHugeObjTest=true

FuncTests.LibMsgTypeBasicSuccessEnable=false
FuncTests.LibMsgTypeBasicFailureEnable=false
FuncTests.LibMsgTypeLargePayloadEnable=false
FuncTests.LibMsgTypeMsgStreamEnable=true
FuncTests.LibMsgFuncStressThreads=1

FuncTests.LibKvStoreThreadsPerCore=3
FuncTests.LibKvStoreRunsPerThread=2
// FuncTests.LibKvStoreCommonStoreTestEnabled=false

FuncTests.LibQueryParserThreadsPerCore=3
FuncTests.LibQueryParserRunsPerThread=2

FuncTests.LibQueryEvalThreadsPerCore=1
FuncTests.LibQueryEvalRunsPerThread=1
// FuncTests.LibQueryEvalNumberOfCores=1
//      == 0 (use number of actual cores)
// FuncTests.LibQueryEvalEvaluateTestEnabled=true
// FuncTests.LibQueryEvalStepThroughTestEnabled=true

FuncTests.LibOptimizerThreadsPerCore=5
FuncTests.LibOptimizerRunsPerThread=2
// FuncTests.LibOptimizerNumberOfCores=1
//      == 0 (use number of actual cores)

// FuncTests.LibQmNumLoop=1
// FuncTests.LibQmNumQueryCreationThread=1
// FuncTests.LibQmNumStateRequestThread=1
// FuncTests.LibQmNumCancellationThread=1
// FuncTests.LibQmNumLoopCheckingState=1
// FuncTests.LibQmNumLoopCancelQuery=1

FuncTests.LibQmQaYelpUserUrl=nfs:///netstore/datasets/yelp/user/
FuncTests.LibQmQaYelpUserPath=nfs:///netstore/datasets/yelp/user/
FuncTests.LibQmQaJoinRetinaDir=/netstore/datasets/qa
FuncTests.LibQmQaErrorRetinaDir=/netstore/datasets/qa

FuncTests.LibSessionQaYelpUserUrl=nfs:///netstore/datasets/yelp/user/
FuncTests.LibSessionQaYelpUserPath=nfs:///netstore/datasets/yelp/user/
FuncTests.LibDsQaYelpReviewsUrl=nfs:///netstore/datasets/yelp/reviews/
FuncTests.LibDsQaYelpReviewsPath=nfs:///netstore/datasets/yelp/reviews/
FuncTests.LibDsQaRandomJsonUrl=nfs:///netstore/datasets/jsonRandom/
FuncTests.LibDsQaRandomJsonPath=nfs:///netstore/datasets/jsonRandom/
FuncTests.LibDsQaYelpUserUrl=nfs:///netstore/datasets/yelp/user/
FuncTests.LibDsQaYelpUserPath=nfs:///netstore/datasets/yelp/user/
FuncTests.LibDsQaGDeltUrl=nfs:///netstore/datasets/gdelt-small
FuncTests.LibDsQaGDeltPath=nfs:///netstore/datasets/gdelt-small

FuncTests.LibOperatorsDatasetUrl=nfs:///netstore/datasets/gdelt-small/
FuncTests.LibOperatorsDatasetPath=nfs:///netstore/datasets/gdelt-small/
FuncTests.LibOperatorsYelpDatasetUrl=nfs:///netstore/datasets/yelp/user/
FuncTests.LibOperatorsYelpDatasetPath=nfs:///netstore/datasets/yelp/user/

//FuncTests.LibOperatorsNumCycles=256
FuncTests.LibOperatorsNumCycles=4
FuncTests.LibOperatorsNumUsers=2
FuncTests.LibOperatorsNumWorkersPerUser=4
FuncTests.LibOperatorsNumLoaders=2
FuncTests.LibOperatorsPctChanceOfTableDrop=50
FuncTests.LibOperatorsPctChanceOfDatasetDrop=50

// FuncTests.LibLogTestBigFileSize=1048576
// FuncTests.LibLogTestNumLogPerThread=5
FuncTests.LibLogTestDataFileDir=/netstore/qa/FuncTests/liblog
FuncTests.LibLogTestDataFileDirAux=/netstore/qa/FuncTests/liblogAux

// FuncTests.LibSessionFuncTestNumThread=1
// FuncTests.LibSessionFuncTestNumSessionPerThread=1

// Used to reproduce the out of stats group issue
//    64,000 stats groups per run, only run for 5 seconds
// FuncTests.LibStatsUpdaterThread=1000
// FuncTests.LibStatsNumStatsPerGroup=64
// FuncTests.LibStatsRunningPeriod=5

// Effectively leads to the nsTest portion to get skipped
// FuncTests.LibNsFuncTestNumLoop=0

// Set to 0 or omit to get us to query the system
// Constants.TotalSystemMemory=25769803776

// Set to true to enforce TotalSystemMemory
// Constants.EnforceVALimit=true

Constants.XcalarRootCompletePath=/var/opt/xcalar

Constants.XcalarStatsPath=/var/opt/xcalar/stats

Constants.TestMode=true
Constants.SendSupportBundle=true
Constants.ClusterLogLevel=Debug
// Needs to be enabled so testArchive doesn't fail
Constants.XdbSerDesMode=2
Constants.XdbLocalSerDesPath=/var/opt/xcalar/
Constants.ThroughputOptimized=false
Constants.DatasetPercentOfXdb=70

// XEM parameters
Constants.XemStatsShipmentEnabled=true
Constants.XemClusterName=Brunson
Constants.XemHostAddress=xem-node7-1.int.xcalar.com
Constants.XemHostPortNumber=15000
Constants.XemStatsPushHeartBeat=15000
Constants.XemIsMultipleNodesPerHost=true

// Guardrails
Constants.NoChildLDPreload=true

Thrift.Port=9090
Thrift.Host=localhost

// --- Start of auto-generated stuff ---
// Cluster management stuff. The following has been
// auto-generated by genConfig.sh
Node.NumNodes=8
Node.0.IpAddr=Brunson
Node.0.Port=5000
Node.0.ApiPort=18552
Node.0.MonitorPort=8000
Node.1.IpAddr=Brunson
Node.1.Port=5001
Node.1.ApiPort=18553
Node.1.MonitorPort=8001
Node.2.IpAddr=Brunson
Node.2.Port=5002
Node.2.ApiPort=18554
Node.2.MonitorPort=8002
Node.3.IpAddr=Brunson
Node.3.Port=5003
Node.3.ApiPort=18555
Node.3.MonitorPort=8003
Node.4.IpAddr=Brunson
Node.4.Port=5004
Node.4.ApiPort=18556
Node.4.MonitorPort=8004
Node.5.IpAddr=Brunson
Node.5.Port=5005
Node.5.ApiPort=18557
Node.5.MonitorPort=8005
Node.6.IpAddr=Brunson
Node.6.Port=5006
Node.6.ApiPort=18558
Node.6.MonitorPort=8006
Node.7.IpAddr=Brunson
Node.7.Port=5007
Node.7.ApiPort=18559
Node.7.MonitorPort=8007
